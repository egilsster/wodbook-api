# NPM deps
##########
FROM node:10-alpine AS deps

WORKDIR /usr/src/app

COPY package.json ./
RUN npm install --production

##############
# Transpile TS
##############
FROM node:10-alpine AS transpile

WORKDIR /usr/src/app

COPY . ./
RUN npm install && \
	npm run build

####################
# Common build image
####################
FROM node:10-alpine AS build

WORKDIR /usr/src/app

COPY --from=transpile /usr/src/app/package.json /usr/src/app/
COPY --from=transpile /usr/src/app/build /usr/src/app/build
COPY --from=deps /usr/src/app/node_modules /usr/src/app/node_modules

##################
# Production Image
##################
FROM build AS production

RUN apk add --no-cache curl

USER root

WORKDIR /usr/src/app

RUN mkdir mywod
RUN chown nobody:nobody -R /usr/src/app/mywod

USER nobody

COPY --from=build /usr/src/app /usr/src/app
COPY api-docs.yml ./

HEALTHCHECK CMD curl --fail http://localhost:43210/health || exit 1

EXPOSE 43210

CMD [ "node", "./build/server.js" ]

############
# Test image
############
FROM production AS test

USER root

WORKDIR /usr/src/app

RUN apk --no-cache add make grep git

COPY . ./

RUN curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter \
  && chmod +x ./cc-test-reporter
RUN	npm install
